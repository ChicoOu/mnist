/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
    	maven{url 'http://maven.aliyun.com/mvn/repository/'}
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath('com.google.protobuf:protobuf-gradle-plugin:0.8.3')
    }
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.google.protobuf'

bootJar {
    baseName = 'mnist-rest-service'
    version =  '0.1.0'
}

sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven{url 'http://maven.aliyun.com/mvn/repository/'}
    jcenter()
}

/*protobuf {
	generatedFilesBaseDir = "$projectDir/src/"
	sourceSets {
		main {
			proto {*/
				// 除了默认的'src/main/proto'目录新增proto文件的方法
				//srcDir 'src/main/protobuf'
				//include '**/*.protodevel'
			/*}
		}
	}
	protoc {
		// The artifact spec for the Protobuf Compiler
		artifact = 'com.google.protobuf:protoc:3.6.0'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.16.1'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}*/

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    compile 'io.grpc:grpc-netty-shaded:1.16.1'
	compile 'io.grpc:grpc-protobuf:1.16.1'
	compile 'io.grpc:grpc-stub:1.16.1'
	compile 'com.google.protobuf:protobuf-java:3.6.0'
	
	compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

